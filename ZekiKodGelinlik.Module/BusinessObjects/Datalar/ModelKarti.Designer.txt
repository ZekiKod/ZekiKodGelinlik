//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Base;
using System.Drawing;
using System.Drawing.Drawing2D;
namespace ZekiKod.Module.BusinessObjects.ZekiKodDB
{

    public partial class ModelKarti : XPObject
    {
        string fModelNo;
        public string ModelNo
        {
            get { return fModelNo; }
            set { SetPropertyValue<string>(nameof(ModelNo), ref fModelNo, value); }
        }
        string fModelAdi;
        public string ModelAdi
        {
            get { return fModelAdi; }
            set { SetPropertyValue<string>(nameof(ModelAdi), ref fModelAdi, value); }
        }
        ModelGrubu fModelGrubu;
        public ModelGrubu ModelGrubu
        {
            get { return fModelGrubu; }
            set { SetPropertyValue<ModelGrubu>(nameof(ModelGrubu), ref fModelGrubu, value); }
        }
        ModelSezonu fSezonu;
        public ModelSezonu Sezonu
        {
            get { return fSezonu; }
            set { SetPropertyValue<ModelSezonu>(nameof(Sezonu), ref fSezonu, value); }
        }
        string fMusteri;
        public string Musteri
        {
            get { return fMusteri; }
            set { SetPropertyValue<string>(nameof(Musteri), ref fMusteri, value); }
        }
        Sirketiz.Module.BusinessObjects.Sirket_izDB.kisi_kartlari fTasarimci;
        public Sirketiz.Module.BusinessObjects.Sirket_izDB.kisi_kartlari Tasarimci
        {
            get { return fTasarimci; }
            set { SetPropertyValue<Sirketiz.Module.BusinessObjects.Sirket_izDB.kisi_kartlari>(nameof(Tasarimci), ref fTasarimci, value); }
        }
        DateTime fTasarimTarihi;
        public DateTime TasarimTarihi
        {
            get { return fTasarimTarihi; }
            set { SetPropertyValue<DateTime>(nameof(TasarimTarihi), ref fTasarimTarihi, value); }
        }

        [NonPersistent]
        [VisibleInListView(true), VisibleInDetailView(false)]
        [DevExpress.ExpressApp.DC.XafDisplayName("Ön Resim")]
        [ImageEditor]
        public byte[] OnResimThumb
        {
            get { return File.Exists(OnResimThumbPath) ? File.ReadAllBytes(OnResimThumbPath) : null; }
        }

        string fOnResimThumbPath;
        [Size(SizeAttribute.Unlimited)]
        public string OnResimThumbPath
        {
            get { return fOnResimThumbPath; }
            set { SetPropertyValue(nameof(OnResimThumbPath), ref fOnResimThumbPath, value); }
        }


        string fOnResimPath;
        [Size(SizeAttribute.Unlimited)]
        public string OnResimPath
        {
            get { return fOnResimPath; }
            set { SetPropertyValue(nameof(OnResimPath), ref fOnResimPath, value); }
        }

        [NonPersistent]
        [VisibleInListView(false), VisibleInDetailView(true)]
        [DevExpress.ExpressApp.DC.XafDisplayName("Ön Resim")]
        [ImageEditor]
        public byte[] OnResim
        {
            get { return File.Exists(OnResimPath) ? File.ReadAllBytes(OnResimPath) : null; }
            set
            {
                if (!IsLoading && !IsSaving && value != null)
                {
                    OnResimPath = SaveImageToFile(value, Oid, ModelNo, "OnResim");
                    OnResimThumbPath = SaveImageToFileThumb(value, Oid, ModelNo, "OnResimThumb");
                }
            }
        }

        [NonPersistent]
        [VisibleInListView(true), VisibleInDetailView(false)]
        [DevExpress.ExpressApp.DC.XafDisplayName("Arka Resim")]
        [ImageEditor]
        public byte[] ArkaResimThumb
        {
            get { return File.Exists(ArkaResimThumbPath) ? File.ReadAllBytes(ArkaResimThumbPath) : null; }
        }

        string fArkaResimThumbPath;
        [Size(SizeAttribute.Unlimited)]
        public string ArkaResimThumbPath
        {
            get { return fArkaResimThumbPath; }
            set { SetPropertyValue(nameof(ArkaResimThumbPath), ref fArkaResimThumbPath, value); }
        }

        string fArkaResimPath;
        [Size(SizeAttribute.Unlimited)]
        public string ArkaResimPath
        {
            get { return fArkaResimPath; }
            set { SetPropertyValue(nameof(ArkaResimPath), ref fArkaResimPath, value); }
        }

        [NonPersistent]
        [VisibleInListView(false), VisibleInDetailView(true)]
        [DevExpress.ExpressApp.DC.XafDisplayName("Arka Resim")]
        [ImageEditor]
        public byte[] ArkaResim
        {
            get { return File.Exists(ArkaResimPath) ? File.ReadAllBytes(ArkaResimPath) : null; }
            set
            {
                if (!IsLoading && !IsSaving && value != null)
                {
                    ArkaResimPath = SaveImageToFile(value, Oid, ModelNo, "ArkaResim");
                    ArkaResimThumbPath = SaveImageToFileThumb(value, Oid, ModelNo, "ArkaResimThumb");
                }
            }
        }

        string fTeknikResim1Path;
        [Size(SizeAttribute.Unlimited)]
        public string TeknikResim1Path
        {
            get { return fTeknikResim1Path; }
            set { SetPropertyValue(nameof(TeknikResim1Path), ref fTeknikResim1Path, value); }
        }

        [NonPersistent]
        [VisibleInListView(false), VisibleInDetailView(true)]
        [DevExpress.ExpressApp.DC.XafDisplayName("Teknik Resim 1")]
        [ImageEditor]
        public byte[] TeknikResim1
        {
            get { return File.Exists(TeknikResim1Path) ? File.ReadAllBytes(TeknikResim1Path) : null; }
            set
            {
                if (!IsLoading && !IsSaving && value != null)
                {
                    TeknikResim1Path = SaveImageToFile(value, Oid, ModelNo, "TeknikResim1");
                }
            }
        }

        string fTeknikResim2Path;
        [Size(SizeAttribute.Unlimited)]
        public string TeknikResim2Path
        {
            get { return fTeknikResim2Path; }
            set { SetPropertyValue(nameof(TeknikResim2Path), ref fTeknikResim2Path, value); }
        }

        [NonPersistent]
        [VisibleInListView(false), VisibleInDetailView(true)]
        [DevExpress.ExpressApp.DC.XafDisplayName("Teknik Resim 2")]
        [ImageEditor]
        public byte[] TeknikResim2
        {
            get { return File.Exists(TeknikResim2Path) ? File.ReadAllBytes(TeknikResim2Path) : null; }
            set
            {
                if (!IsLoading && !IsSaving && value != null)
                {
                    TeknikResim2Path = SaveImageToFile(value, Oid, ModelNo, "TeknikResim2");
                }
            }
        }


        private string SaveImageToFile(byte[] image, int oid, string _modelNo, string klasor)
        {
            string fileName = klasor + "\\" + _modelNo + "-" + oid.ToString().Replace(",", "").Replace(".", "") + ".jpg";
            File.WriteAllBytes(fileName, image);
            return fileName;
        }

        private string SaveImageToFileThumb(byte[] imageStream, int oid, string _modelNo, string klasor)
        {
            string thumbnailFileName = Path.Combine(klasor, _modelNo + "-" + oid.ToString().Replace(",", "").Replace(".", "") + "-thumbnail.jpg");

            // Load the image from the stream
            using (Image image = Image.FromStream(new MemoryStream(imageStream)))
            {
                // Set the new size for the thumbnail
                int thumbnailWidth = 200;
                int originalWidth = image.Width;
                int originalHeight = image.Height;
                float widthRatio = (float)thumbnailWidth / (float)originalWidth;
                float heightRatio = (float)thumbnailWidth / (float)originalWidth;
                float ratio = Math.Min(widthRatio, heightRatio);
                int newWidth = (int)(originalWidth * ratio);
                int newHeight = (int)(originalHeight * ratio);

                using (Bitmap thumbnail = new Bitmap(thumbnailWidth, newHeight))
                {
                    using (Graphics graphics = Graphics.FromImage(thumbnail))
                    {
                        graphics.CompositingQuality = CompositingQuality.HighQuality;
                        graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;
                        graphics.DrawImage(image, 0, 0, newWidth, newHeight);
                    }

                    thumbnail.Save(thumbnailFileName, image.RawFormat);
                }
            }

            return thumbnailFileName;
        }

        string fAciklama;
        [Size(SizeAttribute.Unlimited)]
        public string Aciklama
        {
            get { return fAciklama; }
            set { SetPropertyValue<string>(nameof(Aciklama), ref fAciklama, value); }
        }
        [PersistentAlias("[ModelNo] + ' ' + [ModelAdi] + ' ' + [ModelGrubu.ModelGrupAdi] + ' ' + [Sezonu.Sezonu]")]
        public string Model
        {
            get { return (string)(EvaluateAlias(nameof(Model))); }
        }
        [Association(@"ModelOperasyonReferencesModelKarti")]
        public XPCollection<ModelOperasyon> ModelOperasyons { get { return GetCollection<ModelOperasyon>(nameof(ModelOperasyons)); } }
        [Association(@"ModelParcaReferencesModelKarti")]
        public XPCollection<ModelParca> ModelParcas { get { return GetCollection<ModelParca>(nameof(ModelParcas)); } }
        [Association(@"SiparisKartiReferencesModelKarti")]
        public XPCollection<SiparisKarti> SiparisKartis { get { return GetCollection<SiparisKarti>(nameof(SiparisKartis)); } }
        [Association(@"Model_MaliyetReferencesModelKarti"), Aggregated]
        public XPCollection<Model_Maliyet> Model_Maliyets { get { return GetCollection<Model_Maliyet>(nameof(Model_Maliyets)); } }
    }

}
